Option<T>
// To inner type
unwrap () -> T
unwrap_or (T) -> T
unwrap_or_else (() -> T) -> T
unwrap_or_default () -> T where T: Default
expect (&str) -> T

//Converting to another type
map ((T) -> U) -> Option<U>
map_or (U, (T) -> U) -> U
map_or_else (() -> U, (T) -> U) -> U

//To Result
ok_or (E) -> Result<T, E>
ok_or_else (() -> E) -> Result<T, E>

//Conditioning
filter ((&T) -> bool) -> Option<T>
and (Option<U>) -> Option<U>
and_then ((T) -> Option<U>) -> Option<U>
or (Option<T>) -> Option<T>
or_else (() -> Option<T>) -> Option<T>
xor (Option<T>) -> Option<T>

Option<&T>
// Cloning inner
cloned () -> Option<T> where T: Clone
copied () -> Option<T> where T: Copy

Option<Option<T>>
flatten () -> Option<T>

Option<Result<T, E>>
transpose () -> Result<Option<T>, E>

&Option<T>
// Checking inner
is_some () -> bool
is_none () -> bool

// To inner reference
as_ref () -> Option<&T>
iter () -> Iterator<&T>
as_deref () -> Option<&U>
where T: Deref<Target = U>

&mut Option<T>
// To inner mutable reference
as_mut () -> Option<&mut T>
iter_mut () -> Iterator<&mut T>
as_deref_mut () -> Option<&mut U>
where T: DerefMut + Deref<Target = U>

// Mutation
take () -> Option<T>
replace (T) -> Option<T>
insert (T) -> &mut T
get_or_insert (T) -> &mut T
get_or_insert_with (() -> T) -> &mut T

// from https://upsuper.github.io/rust-cheatsheet/